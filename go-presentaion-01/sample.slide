The Go programming language
6 April 2023

Romel Campbell
romel.campbell@regeneron.com 

* March 2023 Headline: Go enters TIOBE index top 10
.link https://www.tiobe.com/tiobe-index/ TIOBE Index for March 2023
- The index can be used to check whether your programming skills are still up to date or to make a strategic decision about what programming language should be adopted when starting to build a new software system.

* Golang
.image images/Gopher.webp
.play hello/main.go

* HTTP server library built in
.play server/main.go

* Multi threading made easy
.play concurrency/main.go

* Go is not so new (developed by Google in 2007)
.html page4.html

* Why invent a new language?
.html page5.html
.image images/iot.png

* The problem: Older languages are frustrating on a day-to-day basis
.html page6.html
: Statically typed languages can potentially be more efficient than dynamically typed languages in terms of memory usage and performance because the type checking is done at compile-time rather than runtime. This means that the compiler can optimize the code more effectively and reduce the need for runtime checks and type conversions, which can improve performance and reduce memory usage.


* Go has the lighter feel of a scripting language but is compiled.
.html page7.html

* Go is here to stay
.html page8.html

* awslogin command
.code awslogin/main.go /^//START/,/^//END/
.link https://ritscm.regeneron.com/projects/DEVOPS/repos/saml_aws/browse Repo: awslogin

* Blackjack flowcell-preprocessor
.code flowcell-preprocessor/main.go /^//START/,/^//END/
.link https://ritscm.regeneron.com/projects/BLAC/repos/flowcell-preprocessor/browse Repo: Blackjack

* Romailer
.code romailer/main.go /^//START/,/^//END/
.link https://client-service-romailer.eksdev.aws.regeneron.com/ Repo: client frontend
.link https://romailer-service-romailer.eksdev.aws.regeneron.com/swagger-ui/ Repo: backend api

* ssp-serverless
.code ssp-serverless/main.go /^//START/,/^//END/
.link https://ritscm.regeneron.com/projects/SSP/repos/ssp-serverless/browse Repo: ssp-serverless


* AWS Lambda using Go
.code aws-lambda/main.go
.link https://ritscm.regeneron.com/projects/BENIC/repos/vpc/browse/eventbridge-demo Repo: eventbridge-demo

* AWS Lambda using Go
.html page9.html

* Looking forward
.html page10.html

* Conclusion
- Go was created by Google to handle Google-sized problems.
- It was created to enhance the effectiveness of its developers with its simple syntax.
- Overall, Go is a lightweight language with powerful raw computation and handling of memory-heavy tasks. Features such as its garbage collectors and native goroutines make it easy for this language to stay speedy and achieve best-in-class Golang performance.
- Go would make a great addition to our tech stack also.